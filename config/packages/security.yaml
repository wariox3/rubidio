security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    #password_hashers:
        #Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: ''
    encoders:
        App\Entity\Usuario: plaintext
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER,ROLE_DESARROLLO,ROLE_SOPORTE,ROLE_CLIENTE,ROLE_IMPLEMENTACION]

    providers:
        users_in_memory: { memory: null }
        user_db:
            entity:
                class: App\Entity\Usuario
                property: codigoUsuarioPk
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: /.*
            provider: user_db
            form_login:
                login_path: /login
                check_path: /login
                remember_me: false
                default_target_path: inicio_admin
            logout:
                path: /logout
                target: /
            security: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: /api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /Admin, roles: ROLE_ADMIN }
        - { path: /, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /.*, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
